#!/usr/bin/env ruby
# decode links to get destination url

require 'uri'
require 'net/http'
%w[../lib ./lib].each {|l| $LOAD_PATH.unshift("#{File.dirname(File.expand_path(__FILE__))}/#{l}") }
require "helper"

@loop_detector = []

def fetch(uri)
  if @loop_detector.include?(uri)
    notify "We're looping; something's wrong. Try this one anywayâ€¦"
    return uri
  end
  @loop_detector << uri

  u = URI.parse(uri)
  c = Net::HTTP.new(u.host)
  h = c.head("#{u.path}?#{u.query}")
  case h
  when Net::HTTPSuccess then u.to_s
  when Net::HTTPRedirection then fetch(h['location'])
  else
    h.error!
  end
end

if clipboard.match(Regexp.new(%q[^http]))
  clipboard do |c|
    fetch(c)
  end
else
  notify("That doesn't look like a URL.")
end
