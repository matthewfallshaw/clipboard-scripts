#!/usr/bin/env ruby -w

%w[../lib ./lib].each {|l| $LOAD_PATH.unshift("#{File.dirname(File.expand_path(__FILE__))}/#{l}") }
require "helper"

dialog_text = "Filename for new Vim buffer"

finder_path = `/usr/bin/osascript <<END
tell application "Finder"
	set sel to the selection as text
	return POSIX path of sel
end tell
END`.chomp
if File.exist?(finder_path)
  if File.directory?(finder_path)
    finder_path = File.join(finder_path, "tmp.txt")
  elsif `file "#{finder_path}"`.chomp.match(/text/).nil?
    finder_path = File.join(File.dirname(finder_path), "tmp.txt")
  else
    # happy to use that file
    dialog_text = "Open file in Vim (change to open a new file)"
  end
else
  finder_path = File.expand_path("/tmp/tempfile.txt")
end

file_name = `/usr/bin/osascript <<-'__HEREDOC__'
with timeout of 300 seconds
  tell application (path to frontmost application as text)
    activate
    set input to display dialog "#{dialog_text}:" with title "Filename" with icon note default answer "#{finder_path}" buttons {"Cancel", "OK"} default button 2 giving up after 295
    return text returned of input as string
  end tell
end timeout
  __HEREDOC__`.chomp
exit 0 if file_name.empty?

system("PATH=~/bin:/usr/local/bin:$PATH; mvim '#{file_name}'") 
exit 0
